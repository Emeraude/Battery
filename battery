#!/bin/bash

loop=0;
display_date=1;
short=0;
color=1;
std='echo -en \033[0m';
red='echo -en \033[31m';
green='echo -en \033[32m';
yellow='echo -en \033[33m';
bold='echo -en \033[1m';

state() {
    state=$(upower -i $path | grep 'state' | awk '{ print $2 }');
    [ $color == 1 ] && {
	if [ $state == 'discharging' ]
	then
	    $red;
	else
	    $green;
	    [ $state != 'charging' ] && $bold;
	fi
    }

    [ $short == 0 ] && {
	upower -i $path | grep 'state';
    } || {
	if [ $state == 'discharging' ]
	then
	    echo -n '-';
	elif [ $state == 'charging' ]
	then
	    echo -n '+';
	else
	    echo -n '=';
	fi
    }
    [ $color == 1 ] && $std;
}

display() {
    path='/org/freedesktop/UPower/devices/battery_BAT0';
    percent=$(upower -i $path | grep 'percentage' | awk '{ print $2 }' | cut -d '%' -f1 | cut -d '.' -f1);

    [ $short == 0 ] && {
	echo -e 'Battery\n';
	state;
    }

    [ $color == 1 ] && {
	$std;
	if [ "$percent" -lt 10 ]
	then
	    $red;
	    $bold;
	elif [ "$percent" -lt 20 ]
	then
	    $red;
	elif [ "$percent" -lt 50 ]
	then
	    $yellow;
	elif [ "$percent" -eq 100 ]
	then
	    $green;
	    $bold;
	else
	    $green;
	fi
    }

    [ $short == 0 ] && {
	upower -i $path | grep 'percentage'
	[ $color == 1 ] && $std;
	upower -i $path | grep 'time';
	[ $1 -eq 1 ] && {
	    echo '';
	    date;
	}
    } || {
	echo -n $percent;
	state;
    }
}

for i in $*
do
    if [ `echo $i | cut -d '=' -f1` == '--display-date' ]
    then
	choice=`echo $i | cut -d '=' -f2`;
	[ "$choice" == 'n' ] || [ "$choice" == 'no' ]
	display_date=$?;
    elif [ $i == '--loop' ] || [ $i == '-l' ]
    then
	loop=1;
    elif [ $i == '--short' ] || [ $i == '-s' ]
    then
	short=1;
    elif [ $i == '--nocolor' ]
    then
	color=0;
    elif [ $i == '--color' ] || [ $i == '-c' ]
    then
	color=1;
    else
	cat << EOF
Usage: battery [OPTION]...
Display some informations about battery state.
-c, --color			enable color
--display-date=yes/no		display or not the date
-h, --help			display this help
-l, --loop			do an infinite loop
--nocolor			disable color
-s, --short			give the output in a short format
EOF
	exit 0
    fi
done

[ $loop -eq 1 ] && {
    while true
    do
	clear;
	display $display_date;
	sleep 1;
    done
} || display $display_date;
